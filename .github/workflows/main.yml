name: dagger

on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.23"

      - name: Install Dagger CLI
        run: cd /usr/local && { curl -L https://dl.dagger.io/dagger/install.sh | sh; cd -; }

      - name: Build OPA Bundle
        working-directory: ci
        run: dagger call test-build-and-push-bundle --bundle-directory ../bundle --git-directory ../.git --test-directory ../tests --registry-token=env:REGISTRY_ACCESS_TOKEN
        env:
          REGISTRY_ACCESS_TOKEN: ${{ secrets.REGISTRY_ACCESS_TOKEN }}

      - name: Build OPA Bundle Documentation
        working-directory: ci
        run: dagger call get-documentation --bundle-directory ../bundle --git-directory ../.git --docs-directory ../docs export --path ./public
        env:
          REGISTRY_ACCESS_TOKEN: ${{ secrets.REGISTRY_ACCESS_TOKEN }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./ci/public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Build OPA Demo Image
        working-directory: ci
        run: dagger call build-and-push-opa-demo --bundle-directory ../bundle --git-directory ../.git --test-directory ../tests --docs-directory ../docs --config-demo-file ../config-demo.yaml --registry-token=env:REGISTRY_ACCESS_TOKEN
        env:
          REGISTRY_ACCESS_TOKEN: ${{ secrets.REGISTRY_ACCESS_TOKEN }}

      # TODO: write unit tests for the CI
      # - name: Test CI
      #   working-directory: ci
      #   run: dagger call build-ci-image --repo-directory ../ --registry-token=env:REGISTRY_ACCESS_TOKEN
      #   env:
      #     REGISTRY_ACCESS_TOKEN: ${{ secrets.REGISTRY_ACCESS_TOKEN }}

      - name: Build CI Image
        working-directory: ci
        run: dagger call build-ci-image --repo-directory ../ --registry-token=env:REGISTRY_ACCESS_TOKEN
        env:
          REGISTRY_ACCESS_TOKEN: ${{ secrets.REGISTRY_ACCESS_TOKEN }}
